name: "Develop"

on:
  push:
    branches: [develop]

env:

  TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}     

  TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  terraform_version: "1.4.5"
  working_directory: terraform
  target_environment: develop

jobs:
  terraform_plan:
    name: "Run Terraform Plan"
    runs-on: ubuntu-latest
    environment: develop
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Find github project name
        run:  echo "project_name=$(basename `git rev-parse --show-toplevel`)" >> $GITHUB_ENV

      - name: Set Terraform Workspace
        run: |
          echo "Setting ***   ${{ env.project_name }}-${{ env.target_environment }}   *** as the Terraform Workspace"
          echo "TF_WORKSPACE=${{ env.project_name }}-${{ env.target_environment }}" >> $GITHUB_ENV      

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ env.terraform_version }}"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init -input=false              
        working-directory: "${{ env.working_directory }}"
   

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: "${{ env.working_directory }}"

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -input=false -var-file ./environments/${{ env.target_environment }}.tfvars
        working-directory: "${{ env.working_directory }}"

  terraform_apply:
    name: "Run Terraform Apply"
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    environment: develop

    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Find github project name
        run:  echo "project_name=$(basename `git rev-parse --show-toplevel`)" >> $GITHUB_ENV

      - name: Set Terraform Workspace
        run: |
          echo "Setting ***   ${{ env.project_name }}-${{ env.target_environment }}   *** as the Terraform Workspace"
          echo "TF_WORKSPACE=${{ env.project_name }}-${{ env.target_environment }}" >> $GITHUB_ENV      

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ env.terraform_version }}"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: "${{ env.working_directory }}"
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: "${{ env.working_directory }}"

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply --auto-approve -var-file ./environments/${{ env.target_environment }}.tfvars
        working-directory: "${{ env.working_directory }}"
